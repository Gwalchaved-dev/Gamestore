services:
  # MySQL Database service
  database:
    image: mysql:8.0
    container_name: mysql_gamestore
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - database_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h database --silent"]
      interval: 10s
      retries: 5
      timeout: 2s
      start_period: 30s
    networks:
     - app-network

  # PhpMyAdmin service for managing the database
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_gamestore
    environment:
      PMA_HOST: database
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - app-network

  # Symfony application service
  my_symfony_app:
    build: .
    container_name: my_symfony_app
    user: www-data
    volumes:
      - .:/var/www/html:rw,cached
      - ./config/apache/apache-vhost.conf:/etc/apache2/sites-available/000-default.conf:ro
    ports:
      - "8081:80"
    depends_on:
      - database
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}?serverVersion=8.0
    networks:
     - app-network
    command: /bin/bash -c "tail -f /dev/null"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  app-network:
    driver: bridge

volumes:
  database_data:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
