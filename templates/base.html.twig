<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Page d'accueil de Gamestore, magasins de jeux vidéos présent en France à Lille, Paris, Bordeaux, Toulouse et Nantes. Retrouvez tous types de jeux vidéos : FPS, RPG, BUILDER, PLATFORM.">
    <meta name="author" content="Gwalchaved-Dev" />
    
    {{ encore_entry_link_tags('app') }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css" rel="stylesheet">
    <title>Gamestore : magasins de jeux vidéos, rpg, fps, builder...</title>
</head>

<body>
    <header id="navbar-container">
        <div class="logo-container">
            <img src="{{ asset('build/images/logoGamestore.png') }}" alt="Gamestore logo" class="logo">
        </div>
        <nav class="navbar navbar-expand-lg bg-custom">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="sarpanch-regular nav-link" href="{{ path('app_homepage') }}">Accueil</a>
                    </li>
                    <li class="nav-item">
                        <a class="sarpanch-regular nav-link" href="{{ path('galerie') }}">Nos jeux vidéos</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-circle"></i> Mon Compte
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            {% if app.user %}
                                <li><a class="dropdown-item" href="{{ path('account') }}">Mon Compte</a></li>
                                <li><a class="dropdown-item" href="{{ path('app_logout') }}">Se déconnecter</a></li>
                            {% else %}
                                <li><a class="dropdown-item" href="{{ path('app_login') }}">Connexion</a></li>
                            {% endif %}
                        </ul>
                    </li>
                    <li class="nav-item position-relative">
                        <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#cartModal">
                            <i class="bi bi-cart4"></i>
                            {% if app.user and cart_items_count > 0 %}
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cart-badge">
                                    {{ cart_items_count }}
                                </span>
                            {% endif %}
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    
    <main>
        {% block body %}{% endblock %}
    </main>

    <!-- Modal du panier -->
    <div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title sarpanch-semibold" id="cartModalLabel">Votre Panier</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form action="{{ path('cart_validate') }}" method="POST">
                    <div class="modal-body">
                        {% if cart_items|length > 0 %}
                            <ul class="list-group">
                                {% for item in cart_items %}
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        {{ item.jeuxVideo.titre }}
                                        <div>
                                            <!-- Utilisation de item.id pour le data-id -->
                                            <button type="button" class="btn btn-sm btn-outline-secondary btn-minus" data-id="{{ item.id }}">-</button>
                                            <input type="number" class="input-quantity" value="{{ item.quantite }}" min="1" max="{{ item.jeuxVideo.stock }}" data-id="{{ item.id }}">
                                            <button type="button" class="btn btn-sm btn-outline-secondary btn-plus" data-id="{{ item.id }}">+</button>
                                            <span class="item-price">{{ item.jeuxVideo.prix * item.quantite }}€</span>
                                        </div>
                                    </li>
                                {% endfor %}
                            </ul>

                            <div class="mt-3">
                                <label for="deliveryOption">Mode de retrait :</label>
                                <select class="form-select" id="deliveryOption" name="deliveryOption">
                                    <option value="retail">Retrait sur place</option>
                                    <option value="delivery">Livraison</option>
                                </select>
                            </div>

                            <div class="mt-3">
                                <label for="agencySelect">Sélectionner une agence :</label>
                                <select class="form-select" id="agencySelect" name="agencySelect">
                                    {% for agence in agences %}
                                        <option value="{{ agence.id }}">{{ agence.nom }}</option>
                                    {% endfor %}
                                </select>
                            </div>

                            <div class="mt-3">
                                <h5>Total : <span id="total_price">{{ total_price }}€</span></h5>
                            </div>

                            <!-- Bouton Vider le panier avec requête AJAX -->
                            <button type="button" id="btn-empty-cart" class="btn btn-danger mt-3">Vider le panier</button>
                        {% else %}
                            <p>Votre panier est vide.</p>
                        {% endif %}
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Continuer mes achats</button>
                        {% if cart_items|length > 0 %}
                            <button type="submit" class="btn btn-primary">Valider la commande</button>
                        {% endif %}
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- FOOTER -->
    <footer>
        <p class="pt-mono-regular">&copy; 2024 Gamestore - Tous droits réservés</p>
        <p class="pt-mono-regular"><a href="{{ path('mentions_legales') }}">Mentions légales</a> | <a href="{{ path('politique_confidentialite') }}">Politique de confidentialité</a></p>
    </footer>

    <!-- Appel du JavaScript compilé via Webpack Encore -->
    {{ encore_entry_script_tags('app') }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

   <!-- Script pour la gestion des quantités et le vidage du panier -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {

            // Fonction pour mettre à jour la quantité d'un article
            function updateCartItemQuantity(itemId, quantity) {
                fetch('{{ path('update_cart_quantity') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token("update_cart_quantity") }}',
                    },
                    body: JSON.stringify({ itemId: itemId, quantite: quantity })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Mise à jour du prix total affiché
                        document.getElementById('total_price').textContent = data.totalPrice.toFixed(2) + '€';
                        updateCartBadge();  // Mise à jour du badge après modification
                    } else {
                        alert(data.error); // Afficher une alerte si une erreur survient
                    }
                })
                .catch(error => {
                    console.error('Erreur lors de la mise à jour du panier:', error);
                    alert('Une erreur est survenue lors de la mise à jour du panier.');
                });
            }

            // Fonction pour recalculer le total de la commande
            function updateTotal() {
                let total = 0;
                document.querySelectorAll('.list-group-item').forEach(item => {
                    const price = parseFloat(item.querySelector('.item-price').textContent.replace('€', '')); // Retirer le symbole €
                    const quantity = parseInt(item.querySelector('.input-quantity').value);
                    if (!isNaN(price) && !isNaN(quantity)) {
                        total += price * quantity;
                    }
                });
                document.getElementById('total_price').textContent = total.toFixed(2) + '€';
            }

            // Fonction pour mettre à jour le badge du panier
            function updateCartBadge() {
                const quantities = document.querySelectorAll('.input-quantity');
                let totalItems = 0;

                quantities.forEach(input => {
                    totalItems += parseInt(input.value);
                });

                const badge = document.getElementById('cart-badge');

                if (totalItems === 0 && badge) {
                    badge.remove();  // Supprimer le badge si le panier est vide
                } else if (badge) {
                    badge.textContent = totalItems;  // Mettre à jour le badge avec le nombre d'articles
                } else if (totalItems > 0) {
                    // Créer et ajouter le badge s'il n'existe pas
                    const newBadge = document.createElement('span');
                    newBadge.classList.add('position-absolute', 'top-0', 'start-100', 'translate-middle', 'badge', 'rounded-pill', 'bg-danger');
                    newBadge.id = 'cart-badge';
                    newBadge.textContent = totalItems;

                    const cartIcon = document.querySelector('.bi-cart4');
                    if (cartIcon) {
                        cartIcon.parentElement.appendChild(newBadge);
                    }
                }
            }

            // Gestion des clics sur le bouton "-" (pour diminuer la quantité)
            document.querySelectorAll('.btn-minus').forEach(button => {
                button.addEventListener('click', function() {
                    let input = document.querySelector('.input-quantity[data-id="' + this.dataset.id + '"]');
                    let currentValue = parseInt(input.value);
                    if (currentValue > 1) {
                        input.value = currentValue - 1;
                        updateTotal(); // Recalculer le total
                        updateCartItemQuantity(this.dataset.id, input.value); // Envoyer la mise à jour via AJAX
                    }
                });
            });

            // Gestion des clics sur le bouton "+" (pour augmenter la quantité)
            document.querySelectorAll('.btn-plus').forEach(button => {
                button.addEventListener('click', function() {
                    let input = document.querySelector('.input-quantity[data-id="' + this.dataset.id + '"]');
                    let currentValue = parseInt(input.value);
                    let maxValue = parseInt(input.getAttribute('max'));
                    if (currentValue < maxValue) {
                        input.value = currentValue + 1;
                        updateTotal(); // Recalculer le total
                        updateCartItemQuantity(this.dataset.id, input.value); // Envoyer la mise à jour via AJAX
                    }
                });
            });

            // Calculer le total initial au chargement de la page
            updateTotal();

            // Fonction pour vider le panier via AJAX
            document.getElementById('btn-empty-cart').addEventListener('click', function() {
                fetch('{{ path('cart_empty') }}', {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token("cart_empty") }}',
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Vider le contenu du panier dans la modal
                        document.querySelector('.list-group').innerHTML = '';
                        document.getElementById('total_price').textContent = '0.00€';
                        updateCartBadge();  // Mettre à jour le badge du panier
                    } else {
                        alert(data.error);
                    }
                })
                .catch(error => console.error('Erreur lors du vidage du panier :', error));
            });

            // Empêcher le dropdown de se fermer après avoir cliqué sur un élément à l'intérieur
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
                menu.addEventListener('click', function(event) {
                    event.stopPropagation();
                });
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</body>

</html>
